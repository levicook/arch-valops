# Testnet Environment
# Default configuration for testnet operations (validator, bitcoin, titan)

source_up

# Validator configuration
export VALIDATOR_USER=testnet-validator
export ARCH_NETWORK_MODE=testnet

# Bitcoin configuration (testnet validator connects to bitcoin mainnet)
export BITCOIN_USER=testnet-bitcoin
export BITCOIN_NETWORK_MODE=mainnet
export BITCOIN_RPC_USER=bitcoin

# Common testnet endpoints (can be overridden in .env)
export ARCH_TITAN_ENDPOINT=https://titan-public-http.test.arch.network
export ARCH_TITAN_SOCKET_ENDPOINT=titan-public-tcp.test.arch.network:3030
export ARCH_RPC_BIND_PORT=9002

# Ensure required passwords exist
ensure_dot_env_password_exists BITCOIN_RPC_PASSWORD "$(dirname "${BASH_SOURCE[0]}")"

# Source user customizations
dotenv_if_exists .env
dotenv .env.passwords

echo "ðŸ”§ Testnet environment loaded"
echo "  VALIDATOR_USER=$VALIDATOR_USER (ARCH_NETWORK_MODE=$ARCH_NETWORK_MODE)"
echo "  BITCOIN_USER=$BITCOIN_USER (BITCOIN_NETWORK_MODE=$BITCOIN_NETWORK_MODE)"
echo ""
echo "ðŸ“‹ Available commands:"
echo "  # Validator operations:"
echo "  validator-init      # Initialize testnet validator (needs VALIDATOR_ENCRYPTED_IDENTITY_KEY)"
echo "  validator-up        # Start testnet validator"
echo "  validator-down      # Stop testnet validator"
echo "  validator-dashboard # Monitor testnet validator"
echo ""
echo "  # Bitcoin operations:"
echo "  bitcoin-init        # Initialize testnet bitcoin node"
echo "  bitcoin-up          # Start testnet bitcoin node"
echo "  bitcoin-down        # Stop testnet bitcoin node"
echo ""
echo "ðŸ’¡ Customize by creating .env file in this directory"
