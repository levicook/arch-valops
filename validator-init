#!/bin/bash
#
# validator-init - One-time validator initialization and deployment
#
# Complete validator environment setup including identity deployment:
# - Age encryption keys for secure identity deployment
# - Validator user creation and environment setup
# - Encrypted identity deployment (if provided)
# - Complete validator operator configuration
#
# This is a one-time setup script (like 'terraform init')
# After running this, use 'validator-up' to start the validator process
#
# Usage:
#   validator-init --encrypted-identity-key <validator-identity.age> --network testnet
#
# What it does:
# - Verifies age encryption keys exist (must run setup-age-keys first)
# - Creates validator user and directory structure
# - Deploys encrypted validator identity
# - Deploys validator scripts and configuration
# - Does NOT start the validator process (use validator-up)
#
# Idempotent: Safe to run multiple times
#
set -euo pipefail
source "$(dirname "$0")/lib.sh"
cd "$PROJECT_ROOT"

log_echo() {
    echo "validator-init: $@"
}

# Parse command line arguments
ENCRYPTED_IDENTITY_KEY=""
NETWORK_MODE=""
VALIDATOR_USER=""

while [[ $# -gt 0 ]]; do
    case $1 in
    --encrypted-identity-key)
        ENCRYPTED_IDENTITY_KEY="$2"
        shift 2
        ;;
    --network)
        NETWORK_MODE="$2"
        shift 2
        ;;
    --user)
        VALIDATOR_USER="$2"
        shift 2
        ;;
    -h | --help)
        echo "Usage: validator-init [options]"
        echo ""
        echo "Options:"
        echo "  --encrypted-identity-key <file>  Deploy encrypted validator identity"
        echo "  --network <network>              Network mode (devnet|testnet|mainnet)"
        echo "  --user <username>                Validator user"
        echo "  -h, --help                       Show this help"
        echo ""
        echo "Examples:"
        echo "  validator-init --encrypted-identity-key validator.age --network testnet --user testnet-validator"
        exit 0
        ;;
    *)
        echo "validator-init: Unknown option: $1"
        echo "validator-init: Use --help for usage information"
        exit 1
        ;;
    esac
done

# Validate arguments - all are required
if [[ -z "$ENCRYPTED_IDENTITY_KEY" ]] || [[ -z "$NETWORK_MODE" ]] || [[ -z "$VALIDATOR_USER" ]]; then
    log_echo "ERROR: All options are required: --encrypted-identity-key, --network, and --user"
    echo "Usage: validator-init --encrypted-identity-key <file> --network <network> --user <username>"
    exit 1
fi

# Check prerequisites
if ! command -v age >/dev/null 2>&1; then
    log_echo "✗ age binary not found. Install with: sudo apt install age"
    exit 1
fi

if ! command -v validator >/dev/null 2>&1; then
    log_echo "✗ validator binary not found. Install with ./sync-bins"
    exit 1
fi

AGE_DIR="$HOME/.valops/age"
if [[ ! -f "$AGE_DIR/host-identity.key" ]] || [[ ! -f "$AGE_DIR/host-identity.pub" ]]; then
    log_echo "✗ Age keys not found. Run: ./setup-age-keys first"
    exit 1
fi

init_validator_operator "$VALIDATOR_USER" "$ENCRYPTED_IDENTITY_KEY" "$NETWORK_MODE"

log_echo ""
log_echo "✓ Initialized. Start with: ./validator-up --user $VALIDATOR_USER"
