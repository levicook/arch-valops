# valops project environment
# Adds scripts to PATH for easy access

export PATH="$(cd "$(dirname "${BASH_SOURCE:-$0}")" && pwd)/scripts:$PATH"

# Password management utility for validator environments
ensure_dot_env_password_exists() {
    local var_name="$1"
    local target_dir="$2"
    local password_file="${target_dir}/.env.passwords"

    # Create file if it doesn't exist
    if [[ ! -f "$password_file" ]]; then
        touch "$password_file"
        chmod 600 "$password_file"
    fi

    # Check if variable already exists in file
    if ! grep -q "^${var_name}=" "$password_file" 2>/dev/null; then
        # Generate strong password and append
        local password=$(openssl rand -hex 32)
        echo "${var_name}=${password}" >>"$password_file"
        echo "âœ“ Generated ${var_name} in ${password_file}"
    fi
}

# Mode selection utility for environment configuration
select_by_mode() {
    local mode="$1"
    local local_value="$2"
    local remote_value="$3"

    case "${mode:-remote}" in
    local) echo "$local_value" ;;
    *) echo "$remote_value" ;;
    esac
}

# Source user customizations first (create .env file for overrides)
dotenv_if_exists .env

# Bitcoin configuration defaults (override in .env file)
export BITCOIN_P2P_ENABLED="${BITCOIN_P2P_ENABLED:-false}"
export BITCOIN_KNOTS_BANLIST="${BITCOIN_KNOTS_BANLIST:-true}"

echo "ðŸ”§ valops project environment loaded"
echo "  Scripts available: validator-init, validator-up, validator-down, etc."
